server:
  port: 8091

spring:
  application:
    name: message-service
  datasource:
    url: jdbc:mysql://localhost:8889/message_data
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      acks: all
    consumer:
      group-id: message-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer

# Configuration Swagger/OpenAPI
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs
  packages-to-scan: com.abdatytch.message_service.controller
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.abdatytch.message_service.dto.*"

# Configuration Swagger/OpenAPI
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs
  packages-to-scan: com.abdatytch.message_service.controller

  redis:
    host: localhost
    port: 6379
    password: ${REDIS_PASSWORD}

security:
  oauth2:
    resourceserver:
      jwt:
        issuer-uri: ${JWT_ISSUER_URI}

app:
  kafka:
    topics:
      message-sent: message-sent
      message-received: message-received
      message-read: message-read
      user-status: user-status
  message:
    max-size: 4096
    max-attachments: 10
    supported-types:
      - IMAGE
      - DOCUMENT
      - AUDIO
    attachment-size-limit: 10485760  # 10MB in bytes
